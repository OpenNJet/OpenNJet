
# Copyright (C) Igor Sysoev
# Copyright (C) NJet, Inc.


if [ $PCRE != NONE ]; then

    if [ -f $PCRE/src/pcre2.h.generic ]; then

        PCRE_LIBRARY=PCRE2

        have=NJT_PCRE . auto/have
        have=NJT_PCRE2 . auto/have

        if [ "$NJT_PLATFORM" = win32 ]; then
            have=PCRE2_STATIC . auto/have
        fi

        CORE_INCS="$CORE_INCS $PCRE/src/"
        CORE_DEPS="$CORE_DEPS $PCRE/src/pcre2.h"

        case "$NJT_CC_NAME" in

            msvc)
                LINK_DEPS="$LINK_DEPS $PCRE/src/pcre2-8.lib"
                CORE_LIBS="$CORE_LIBS $PCRE/src/pcre2-8.lib"
            ;;

            *)
                LINK_DEPS="$LINK_DEPS $PCRE/.libs/libpcre2-8.a"
                CORE_LIBS="$CORE_LIBS $PCRE/.libs/libpcre2-8.a"
            ;;

        esac

    else

        PCRE_LIBRARY=PCRE

        have=NJT_PCRE . auto/have

        if [ "$NJT_PLATFORM" = win32 ]; then
            have=PCRE_STATIC . auto/have
        fi

        CORE_INCS="$CORE_INCS $PCRE"
        CORE_DEPS="$CORE_DEPS $PCRE/pcre.h"

        case "$NJT_CC_NAME" in

            msvc | owc | bcc)
                LINK_DEPS="$LINK_DEPS $PCRE/pcre.lib"
                CORE_LIBS="$CORE_LIBS $PCRE/pcre.lib"
            ;;

            *)
                LINK_DEPS="$LINK_DEPS $PCRE/.libs/libpcre.a"
                CORE_LIBS="$CORE_LIBS $PCRE/.libs/libpcre.a"
            ;;

        esac
    fi

    if [ $PCRE_JIT = YES ]; then
        have=NJT_HAVE_PCRE_JIT . auto/have
        PCRE_CONF_OPT="$PCRE_CONF_OPT --enable-jit"
    fi

else

    if [ "$NJT_PLATFORM" != win32 ]; then
        PCRE=NO
    fi

    if [ $PCRE = NO -a $PCRE2 != DISABLED ]; then

        njt_feature="PCRE2 library"
        njt_feature_name="NJT_PCRE2"
        njt_feature_run=no
        njt_feature_incs="#define PCRE2_CODE_UNIT_WIDTH 8
                          #include <pcre2.h>"
        njt_feature_path=
        njt_feature_libs="-lpcre2-8"
        njt_feature_test="pcre2_code *re;
                          re = pcre2_compile(NULL, 0, 0, NULL, NULL, NULL);
                          if (re == NULL) return 1"
        . auto/feature

        if [ $njt_found = no ]; then

            # pcre2-config

            njt_pcre2_prefix=`pcre2-config --prefix 2>/dev/null`

            if [ -n "$njt_pcre2_prefix" ]; then
                njt_feature="PCRE2 library in $njt_pcre2_prefix"
                njt_feature_path=`pcre2-config --cflags \
                                  | sed -n -e 's/.*-I *\([^ ][^ ]*\).*/\1/p'`
                njt_feature_libs=`pcre2-config --libs8`
                . auto/feature
            fi
        fi

        if [ $njt_found = yes ]; then
            have=NJT_PCRE . auto/have
            CORE_INCS="$CORE_INCS $njt_feature_path"
            CORE_LIBS="$CORE_LIBS $njt_feature_libs"
            PCRE=YES
            PCRE_LIBRARY=PCRE2
        fi
    fi

    if [ $PCRE = NO ]; then

        njt_feature="PCRE library"
        njt_feature_name="NJT_PCRE"
        njt_feature_run=no
        njt_feature_incs="#include <pcre.h>"
        njt_feature_path=
        njt_feature_libs="-lpcre"
        njt_feature_test="pcre *re;
                          re = pcre_compile(NULL, 0, NULL, 0, NULL);
                          if (re == NULL) return 1"
        . auto/feature

        if [ $njt_found = no ]; then

            # FreeBSD port

            njt_feature="PCRE library in /usr/local/"
            njt_feature_path="/usr/local/include"

            if [ $NJT_RPATH = YES ]; then
                njt_feature_libs="-R/usr/local/lib -L/usr/local/lib -lpcre"
            else
                njt_feature_libs="-L/usr/local/lib -lpcre"
            fi

            . auto/feature
        fi

        if [ $njt_found = no ]; then

            # RedHat RPM, Solaris package

            njt_feature="PCRE library in /usr/include/pcre/"
            njt_feature_path="/usr/include/pcre"
            njt_feature_libs="-lpcre"

            . auto/feature
        fi

        if [ $njt_found = no ]; then

            # NetBSD port

            njt_feature="PCRE library in /usr/pkg/"
            njt_feature_path="/usr/pkg/include"

            if [ $NJT_RPATH = YES ]; then
                njt_feature_libs="-R/usr/pkg/lib -L/usr/pkg/lib -lpcre"
            else
                njt_feature_libs="-L/usr/pkg/lib -lpcre"
            fi

            . auto/feature
        fi

        if [ $njt_found = no ]; then

            # MacPorts

            njt_feature="PCRE library in /opt/local/"
            njt_feature_path="/opt/local/include"

            if [ $NJT_RPATH = YES ]; then
                njt_feature_libs="-R/opt/local/lib -L/opt/local/lib -lpcre"
            else
                njt_feature_libs="-L/opt/local/lib -lpcre"
            fi

            . auto/feature
        fi

        if [ $njt_found = yes ]; then
            CORE_INCS="$CORE_INCS $njt_feature_path"
            CORE_LIBS="$CORE_LIBS $njt_feature_libs"
            PCRE=YES
            PCRE_LIBRARY=PCRE
        fi

        if [ $PCRE = YES ]; then
            njt_feature="PCRE JIT support"
            njt_feature_name="NJT_HAVE_PCRE_JIT"
            njt_feature_test="int jit = 0;
                              pcre_free_study(NULL);
                              pcre_config(PCRE_CONFIG_JIT, &jit);
                              if (jit != 1) return 1;"
            . auto/feature

            if [ $njt_found = yes ]; then
                PCRE_JIT=YES
            fi
        fi
    fi

    if [ $PCRE != YES ]; then
cat << END

$0: error: the HTTP rewrite module requires the PCRE library.
You can either disable the module by using --without-http_rewrite_module
option, or install the PCRE library into the system, or build the PCRE library
statically from the source with njet by using --with-pcre=<path> option.

END
        exit 1
    fi

fi

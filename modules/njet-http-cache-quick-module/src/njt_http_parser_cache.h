

/* This file was generated by JSON Schema to C.
 * Any changes made to it will be lost on regeneration. 

 * Copyright (C) 2021-2023  TMLake(Beijing) Technology Co., Ltd.
 */

#ifndef PARSER_CACHE_H
#define PARSER_CACHE_H
#include <stdint.h>
#include <stdbool.h>
#include "njt_core.h"
#include "js2c_njet_builtins.h"
/* ===================== Generated type declarations ===================== */
typedef njt_str_t cache_caches_item_location_name_t;

typedef njt_str_t cache_caches_item_backend_server_t;

typedef njt_str_t cache_caches_item_status_t;

typedef int64_t cache_caches_item_download_ratio_t;
typedef struct cache_caches_item_t_s {
    cache_caches_item_location_name_t location_name;
    cache_caches_item_backend_server_t backend_server;
    cache_caches_item_status_t status;
    cache_caches_item_download_ratio_t download_ratio;
    unsigned int is_location_name_set:1;
    unsigned int is_backend_server_set:1;
    unsigned int is_status_set:1;
    unsigned int is_download_ratio_set:1;
} cache_caches_item_t;

typedef njt_array_t  cache_caches_t;
typedef struct cache_t_s {
    cache_caches_t *caches;
    unsigned int is_caches_set:1;
} cache_t;

cache_caches_item_location_name_t* get_cache_caches_item_location_name(cache_caches_item_t *out);
cache_caches_item_backend_server_t* get_cache_caches_item_backend_server(cache_caches_item_t *out);
cache_caches_item_status_t* get_cache_caches_item_status(cache_caches_item_t *out);
cache_caches_item_download_ratio_t get_cache_caches_item_download_ratio(cache_caches_item_t *out);
cache_caches_item_t* get_cache_caches_item(cache_caches_t *out, size_t idx);
// CHECK ARRAY not exceeding bounds before calling this func
cache_caches_t* get_cache_caches(cache_t *out);
void set_cache_caches_item_location_name(cache_caches_item_t* obj, cache_caches_item_location_name_t* field);
void set_cache_caches_item_backend_server(cache_caches_item_t* obj, cache_caches_item_backend_server_t* field);
void set_cache_caches_item_status(cache_caches_item_t* obj, cache_caches_item_status_t* field);
void set_cache_caches_item_download_ratio(cache_caches_item_t* obj, cache_caches_item_download_ratio_t field);
cache_caches_item_t* create_cache_caches_item(njt_pool_t *pool);
int add_item_cache_caches(cache_caches_t *src, cache_caches_item_t* items);
cache_caches_t* create_cache_caches(njt_pool_t *pool, size_t nelts);
void set_cache_caches(cache_t* obj, cache_caches_t* field);
cache_t* create_cache(njt_pool_t *pool);
cache_t* json_parse_cache(njt_pool_t *pool, const njt_str_t *json_string, js2c_parse_error_t *err_ret);
njt_str_t* to_json_cache(njt_pool_t *pool, cache_t *out, njt_int_t flags);
#endif /* PARSER_CACHE_H */
